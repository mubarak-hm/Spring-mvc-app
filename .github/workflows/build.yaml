name: Build, Push to ECR, and Deploy to AWS ECS

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: awstodoapplication

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (required for Maven build)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17' # Use the correct Java version for your project
          distribution: 'temurin'

      # Step 3: Build the JAR file using Maven
      - name: Build with Maven
        run: mvn package -DskipTests

      # Step 4: Debug the target directory (optional)
      - name: Debug target directory
        run: ls -R target

      # Step 5: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 6: Login to Amazon ECR Public
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1

      # Step 7: Build, tag, and push the Docker image to Amazon ECR Public
      - name: Build, tag, and push image to Amazon ECR Public
        env:
          ECR_REGISTRY: 867344428625.dkr.ecr.eu-central-1.amazonaws.com
          ECR_REPOSITORY: todoapp
          IMAGE_TAG: awstodoapplication
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG awstodoapplication
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
